<%- include header %>
<style>
	@keyframes placeHolderShimmer {
		0% {
			background-position: 0px 0
		}

		100% {
			background-position: 1200px 0
		}
	}

	.anim {
		animation-duration: 1s;
		animation-fill-mode: forwards;
		animation-iteration-count: infinite;
		animation-name: placeHolderShimmer;
		animation-timing-function: linear;
		background: #f6f7f8;
		background: linear-gradient(to right, #eeeeee 40%, #dddddd 50%, #eeeeee 60%);
		background-size: 1200px 104px;
		height: 20px;
		position: relative;
	}

	.pad10 {
		padding-top: 10px;
		padding-bottom: 10px;
	}

	.pad8 {
		padding-top: 6px;
		padding-bottom: 6px;
	}

	.bola {
		width: 350px;
		height: 350px;
		border-radius: 350px;
	}

	@media (max-width: 700px) {
		.bola {
			width: 250px !important;
			height: 250px !important;
			border-radius: 250px !important;
		}
	}

	@media (min-width: 990px) and (max-width: 1400px) {
		.bola {
			width: 250px !important;
			height: 250px !important;
			border-radius: 250px !important;
		}
	}

	.bola {
		position: absolute;
		top: 50%;
		margin-top: -120px;
		left: 100px;
	}

	.rows {
		right: 0;
		position: absolute;
		height: 20px;
		width: 190px;
	}

	.rows2 {
		left: 15%;
		position: absolute;
		height: 22px;
		width: 70%;
	}

	.row1 {
		top: 10%;
	}

	.row2 {
		top: 20%;
	}

	.row3 {
		top: 30%;
	}

	.row4 {
		top: 30%;
	}

	.row5 {
		top: 40%;
	}

	.row6 {
		top: 50%;
	}

	.row7 {
		top: 60%;
	}

	.row8 {
		top: 70%;
	}

	.shadow_title {
		width: 200px;
	}
</style>
<main>
	<div class="container-fluid">
		<div class="row">
			<div class="col-4">
				<h1>Overview</h1>
			</div>
			<div class="col-8  text-right">
				<button class="connect btn btn-primary btn-lg mb-1">
					Add account
				</button>
			</div>

			<% if (accounts.length != 0) { %>
			<div class="col-12">
				<div class="form-group mb-3" style="display: inline-block;">
					<div class="input-daterange input-group">
						<input type="text" class="input-sm form-control" name="start" id="start" placeholder="Start" />
						<span class="input-group-addon"></span>
						<input type="text" class="input-sm form-control" name="end" id="end" placeholder="End" />
						<button id="filter" class="btn btn-primary" style="margin-left: 10px;">
							Filter
						</button>
					</div>
				</div>
			</div>
			<% } %>
		</div>

		<br>

		<div class="row" id="data">

			<% if (accounts.length == 0) { %>
			<div class="col-12">
				<div class="card mb-4">
					<div class="card-body ">
						<h5 class="mb-4">Information</h5>
						<div class="mb-3">
							<p>You don't have any account connected to plaid.</p>
							<button class="connect btn btn-primary btn-lg mb-1">
								Connect with my bank account
							</button>
						</div>
					</div>
				</div>
			</div>
			<% } else { %>

			<div class="col-md-12 placeholders" style="margin-top:120px;">
				<div class="row">
					<div class="col-lg-3">
						<div class="anim"></div>
					</div>
					<div class="col-lg-8"></div>
					<div class="col-lg-6 mb-5">
						<div class="chart-container">
							<div class="anim bola"></div>
							<div class="anim rows row1"></div>
							<div class="anim rows row2"></div>
							<div class="anim rows row3"></div>
						</div>
					</div>
					<div class="col-lg-6 mb-5">
						<div class="chart-container">
							<div class="anim rows2 row4"></div>
							<div class="anim rows2 row5"></div>
							<div class="anim rows2 row6"></div>
							<div class="anim rows2 row7"></div>
							<div class="anim rows2 row8"></div>
						</div>
					</div>
				</div>
			</div>

			<% } %>

		</div>
	</div>
</main>

<%- include footer %>

<script type="text/javascript">

	jQuery(document).ready(function ($) {

		if ($("#start").length) {
			var startDate = moment().subtract(1, 'months').startOf('month').format('YYYY-MM-DD');
			var endDate = moment().subtract(1, 'months').endOf('month').format('YYYY-MM-DD');
			$("#start").val(startDate);
			$("#end").val(endDate);
			getData();
		}

		$("#filter").on("click", function (e) {
			$(".placeholders").show();
			$(".dataAdded").remove();
			getData();
		});

		var products = 'transactions'.split(',');
		$(".connect").on("click", function (e) {

			var handler = Plaid.create({
				apiVersion: 'v2',
				clientName: 'Plaid Quickstart',
				env: '<%= PLAID_ENV %>',
				product: products,
				key: '<%= PLAID_PUBLIC_KEY %>',
				onSuccess: function (public_token) {
					console.log(public_token);

					$('html').loading({ stoppable: false });

					axios({
						method: 'post',
						url: '/api/get_access_token',
						data: {
							public_token: public_token
						},
						headers: { 'Authorization': 'Bearer ' + Cookies.get('token_user') }
					}).then((response) => {

						var data = response.data;

						$('html').loading({
							message: 'Account added successfully',
						});
						setTimeout(function (e) {
							document.location.reload();
						}, 2000);

					}).catch((error) => {
						$('html').loading({
							message: 'Something goes wrong, please try again.',
						});
						setTimeout(function (e) {
							$('html').loading('stop');
						}, 2000);
						console.log(error)
					});

				},
			}).open();

		});

		function getData() {

			var start = $("#start").val();
			var end = $("#end").val();

			axios({
				method: 'post',
				url: '/api/accounts_data',
				data: {
					start: start,
					end: end
				},
				headers: { 'Authorization': 'Bearer ' + Cookies.get('token_user') }
			}).then((response) => {

				var data = response.data.data;

				console.log(data);

				$(".placeholders").hide();

				var colorArray = ['#F8B195', '#F67280', '#C06C84', '#6C5B7B', '#355C7D', '#D4E1E8', '#FFF9D2', '#FF6F61', '#4799FC', '#3B71B2'];

				data.forEach(function (item) {

					if (!isEmpty(item.transactions)) {

						$("#data").append(`
						<div class="col-md-12 dataAdded" style="margin-top:60px;">
						<div class="row">
						<div class="col-lg-12">
						<h3>${item.name} - ${response.data.month}</h3>
						</div>
						<div class="col-lg-12" style="height: 30px;"></div>
						<div class="col-lg-6 mb-5">
						<div class="chart-container" style="height: 400px;">
						<canvas id="pieChart_${item.id}"></canvas>
						</div>
						</div>
						<div class="col-lg-6 mb-5">
						<h6 class="mb-4">${item.name} - Historical ${response.data.month}</h6>
						<div class="chart-container">
						<canvas id="salesChartNoShadow_${item.id}"></canvas>
						</div>
						</div>
						<div class="col-lg-12"><hr /></div>
						</div>
						</div>`);

						var pie_categories = [];
						var pie_values = [];

						var accountsObject = {};
						var netWorth = [];
						var line_accounts = [];
						var line_values = [];

						for (var a in item.accounts) {
							accountsObject[item.accounts[a]["account_id"]] = { "name": item.accounts[a]["name"], "net_worth": 0 };
							line_accounts.push(item.accounts[a]["name"]);
							line_values.push(item.accounts[a]["balances"]["current"]);
						}

						for (var k in item.transactions) {
							var sum = 0;
							item.transactions[k].forEach(function (res) {
								accountsObject[res["account_id"]]["net_worth"] = accountsObject[res["account_id"]]["net_worth"] + res["amount"];
								sum += res["amount"];
							});
							pie_categories.push(k);
							pie_values.push(sum);
						}

						for (var l in accountsObject) {
							netWorth.push(accountsObject[l].net_worth);
						}

						var pieChart = document.getElementById("pieChart_" + item.id);
						var myChart = new Chart(pieChart, {
							type: "pie",
							data: {
								labels: pie_categories,
								datasets: [
									{
										backgroundColor: colorArray,
										label: "",
										data: pie_values
									}
								]
							},
							draw: function () { },
							options: {
								plugins: {
									datalabels: {
										display: false
									}
								},
								responsive: true,
								maintainAspectRatio: false,
								title: {
									display: false
								},
								layout: {
									padding: {
										bottom: 20
									}
								},
								legend: {
									position: "right",
									labels: {
										usePointStyle: true,
										fontSize: 12
									}
								}
							}
						});

						var salesChartNoShadow = document
							.getElementById("salesChartNoShadow_" + item.id)
							.getContext("2d");
						var myChart = new Chart(salesChartNoShadow, {
							type: "line",
							options: {
								plugins: {
									datalabels: {
										display: false
									}
								},
								responsive: true,
								maintainAspectRatio: false,
								scales: {
									yAxes: [
										{
											gridLines: {
												display: true,
												lineWidth: 1,
												color: "rgba(0,0,0,0.1)",
												drawBorder: false
											}
										}
									],
									xAxes: [
										{
											gridLines: {
												display: false
											}
										}
									]
								},
								legend: {
									display: false
								}
							},
							data: {
								labels: line_accounts,
								datasets: [
									{
										label: "",
										data: netWorth,
										borderColor: "#09f",
										pointBackgroundColor: "#09f",
										pointBorderColor: "#09f",
										pointHoverBackgroundColor: "#09f",
										pointHoverBorderColor: "#09f",
										pointRadius: 6,
										pointBorderWidth: 2,
										pointHoverRadius: 8,
										fill: false
									}
								]
							}
						});

					} else {

						$("#data").append(`<div class="col-12 card_accounts dataAdded">
							<div class="card d-flex flex-row mb-3 pad8">
								<div class="pl-2 d-flex flex-grow-1 min-width-zero">
									<div class="card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center">
										<p class="list-item-heading mb-1 truncate">${item.name} doesn't have any transactions for this period.</p>
									</div>
								</div>
							</div>
						</div>`)

					}

				});

			}).catch((error) => {

				console.log(error);

			});
		}

		function isEmpty(obj) {
			for (var prop in obj) {
				if (obj.hasOwnProperty(prop)) {
					return false;
				}
			}

			return JSON.stringify(obj) === JSON.stringify({});
		}

	})
</script>